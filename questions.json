[
  {
    "Question": "Qu'est-ce que JSX en React ?",
    "CorrectAnswer": "Une syntaxe qui mélange HTML et JavaScript",
    "Answer1": "Un langage différent de JavaScript",
    "Answer2": "Un fichier CSS",
    "Answer4": "Un compilateur TypeScript",
    "Answer3": "Une syntaxe qui mélange HTML et JavaScript",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "À quoi sert `useState` dans React ?",
    "CorrectAnswer": "À gérer l'état d'un composant",
     "Answer4": "À gérer l'état d'un composant",
    "Answer1": "À styliser un composant",
    "Answer2": "À créer un élément DOM",
    "Answer3": "À importer une API",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle méthode React permet de gérer des effets de bord ?",
    "CorrectAnswer": "useEffect",
    "Answer1": "useState",
  
    "Answer4": "useEffect",
    "Answer2": "useRef",
    "Answer3": "useContext",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Comment nomme-t-on une fonction React qui retourne du JSX ?",
    "CorrectAnswer": "Un composant",
    "Answer1": "Un hook",
    "Answer2": "Un middleware",
    "Answer4": "Un composant",
    "Answer3": "Un reducer",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel hook est utilisé pour créer une référence mutable ?",
    "CorrectAnswer": "useRef",
    "Answer1": "useState",
    "Answer4": "useRef",
    "Answer2": "useEffect",
    "Answer3": "useMemo",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle balise HTML crée un lien hypertexte ?",
    "CorrectAnswer": "<a>",
    "Answer1": "<link>",
    "Answer2": "<button>",
    "Answer4": "<a>",
    "Answer3": "<nav>",
    
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle balise insère une image ?",
    "CorrectAnswer": "<img>",
    "Answer4": "<img>",
    "Answer1": "<image>",
    "Answer2": "<src>",
    "Answer3": "<pic>",

    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle est la structure de base d'un document HTML ?",
    "CorrectAnswer": "<!DOCTYPE html><html><head><body>",
    "Answer1": "<header><main><footer>",
    "Answer2": "<div><section><article>",
        "Answer4": "<!DOCTYPE html><html><head><body>",

    "Answer3": "<html5><head><body>",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel attribut HTML spécifie une classe CSS ?",
    "CorrectAnswer": "class",
    "Answer1": "id",
    "Answer2": "name",
        "Answer4": "class",

    "Answer3": "style",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quels éléments HTML sont utilisés pour les titres ?",
    "CorrectAnswer": "<h1> à <h6>",

    "Answer1": "<head>",
        "Answer4": "<h1> à <h6>",

    "Answer2": "<title>",
    "Answer3": "<heading>",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel sélecteur CSS cible tous les éléments <p> ?",
    "CorrectAnswer": "p",
    "Answer1": ".p",
    "Answer2": "#p",
        "Answer4": "p",

    "Answer3": "*p",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Comment ajouter du CSS personnalisé dans HTML ?",
    "CorrectAnswer": "<style>",
    "Answer1": "<css>",
    "Answer2": "<design>",
    "Answer4": "<style>",
    "Answer3": "<script>",
    
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Comment centrer un texte en CSS ?",
    "CorrectAnswer": "text-align: center",
    "Answer1": "align: center",
    "Answer2": "justify-content: center",
    "Answer3": "margin: auto",
    "Answer4": "text-align: center",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle propriété CSS modifie la taille du texte ?",
    "CorrectAnswer": "font-size",
    "Answer1": "text-size",
    "Answer2": "text-style",
    "Answer3": "size",
    "Answer4": "font-size",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel préfixe CSS est utilisé pour les variables ?",
    "CorrectAnswer": "--",
    "Answer1": "$",
    "Answer2": "@",
    "Answer3": "var",
    "Answer4": "--",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle méthode DOM sélectionne un élément par son ID ?",
    "CorrectAnswer": "getElementById()",
    "Answer1": "querySelector()",
        "Answer4": "getElementById()",

    "Answer2": "getElementsByClassName()",
    "Answer3": "querySelectorAll()",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Que retourne document.querySelector('div') ?",
    "CorrectAnswer": "Le premier élément div trouvé",
    "Answer1": "Tous les éléments div",
    "Answer2": "Une NodeList",
        "Answer4": "Le premier élément div trouvé",

    "Answer3": "Un tableau",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Comment ajouter un élément enfant dans le DOM ?",
    "CorrectAnswer": "appendChild()",
    "Answer1": "insert()",
        "Answer4": "appendChild()",

    "Answer2": "addChild()",
    "Answer3": "push()",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Comment modifier le texte d'un élément DOM ?",
    "CorrectAnswer": "textContent",
        "Answer4": "textContent",

    "Answer1": "value",
    "Answer2": "innerText",
    "Answer3": "innerHTML",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Que permet l'événement 'click' ?",
    "CorrectAnswer": "Détecter un clic utilisateur",
    "Answer1": "Changer la couleur",
    "Answer2": "Rediriger vers un lien",
    "Answer3": "Valider un formulaire",
    "Answer4": "Détecter un clic utilisateur",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel est l'objectif principal de fetch() ?",
    "CorrectAnswer": "Effectuer des requêtes HTTP",
    "Answer1": "Créer un serveur",
    "Answer2": "Stocker des données",
    "Answer3": "Manipuler le DOM",
    "Answer4": "Effectuer des requêtes HTTP",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Que retourne fetch() ?",
    "CorrectAnswer": "Une Promesse",
    "Answer4": "Une Promesse",
    "Answer1": "Un tableau",

    "Answer2": "Un objet JSON",
    "Answer3": "Une chaîne",
    
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quelle méthode HTTP récupère des données ?",
    "CorrectAnswer": "GET",
    "Answer1": "POST",
    "Answer2": "PUT",
        "Answer4": "GET",

    "Answer3": "DELETE",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel code signifie 'OK' ?",
    "CorrectAnswer": "200",
    "Answer1": "404",
        "Answer4": "200",

    "Answer2": "500",

    "Answer3": "302",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel en-tête est utilisé pour JSON ?",
    "CorrectAnswer": "Content-Type: application/json",
    "Answer1": "Accept: application/json",
        "Answer4": "Content-Type: application/json",

    "Answer2": "Access-Control-Allow-Origin",
    "Answer3": "Authorization",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Que signifie REST dans REST API ?",
    "CorrectAnswer": "Representational State Transfer",
    "Answer1": "Remote Server Text",
    "Answer2": "Response Standard Test",
        "Answer4": "Representational State Transfer",

    "Answer3": "Rapid Execution Structure Tool",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Que fait la méthode POST dans une API REST ?",
    "CorrectAnswer": "Crée une nouvelle ressource",
    "Answer1": "Lit une ressource",
    "Answer2": "Supprime une ressource",
    "Answer3": "Met à jour une ressource",
    "Answer4": "Crée une nouvelle ressource",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Quel format est couramment utilisé dans les API ?",
    "CorrectAnswer": "JSON",
        "Answer4": "JSON",

    "Answer1": "XML",
    "Answer2": "CSV",
    "Answer3": "HTML",
    "Time": 120,
    "Points": 1000
  },
  {
    "Question": "Que fait response.json() dans fetch ?",
    "CorrectAnswer": "Convertit la réponse en JSON",
    "Answer1": "Envoie les données",
    "Answer2": "Affiche la réponse",
    "Answer3": "Valide la réponse",
    "Answer4": "Convertit la réponse en JSON",
    "Time": 120,
    "Points": 1000
  }
]
